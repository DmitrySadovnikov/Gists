//// setup ////

// development.rb
config.cache_store = :redis_store, {
  host:      'localhost',
  port:      6379,
  db:        0,
  namespace: 'redis-web'
}

// view
- cache 'word-of-the-hour', expires_in: Time.now.beginning_of_hour + 1.hour do
  = %w(1a 2a 3a 4a 5a 6a).sample

//logs
redis-cli monitor
////////////




### Other ####
SAVE // create dump

############


SET server:name "fido"
GET server:name => "fido"

SET connections 10
INCR connections     # => 11
INCR connections     # => 12
DEL connections
INCR connections     # => 1

# multitreading
SET resource:lock "Redis Demo"
EXPIRE resource:lock 120

SET resource:lock "Redis Demo 1"
EXPIRE resource:lock 120
TTL resource:lock => 119              # TTL test time of command
SET resource:lock "Redis Demo 2"
TTL resource:lock => -1


# datastructures
### LIST ###
RPUSH friends "Alice" - add to the end of list
LPUSH friends "Sam"   - add to the begin of list 

LRANGE friends 0 -1 # get whal list
LRANGE friends 0 1  # get two first elems

LLEN returns the current length of the list.
LLEN friends => 3

LPOP removes the first element from the list and returns it.
LPOP friends => "Sam"

RPOP removes the last element from the list and returns it.
############

### SET ###
SADD adds the given value to the set.
SADD superpowers "flight"
SADD superpowers "x-ray vision"
SADD superpowers "reflexes"

SREM removes the given value from the set.
SREM superpowers "reflexes"

SISMEMBER tests if the given value is in the set. It returns 1 if the value is there and 0 if it is not.
SISMEMBER superpowers "flight" => 1
SISMEMBER superpowers "reflexes" => 0

SMEMBERS returns a list of all the members of this set.
SMEMBERS superpowers => 1) "flight", 2) "x-ray vision"

SUNION combines two or more sets and returns the list of all elements.
SADD birdpowers "pecking"
SADD birdpowers "flight"
SUNION superpowers birdpowers => 1) "pecking", 2) "x-ray vision", 3) "flight"
###########

### ZED ### (sorted set)
ZADD hackers 1940 "Alan Kay" # 1940 is a score for sorting
ZADD hackers 1906 "Grace Hopper"
ZADD hackers 1953 "Richard Stallman"
ZADD hackers 1965 "Yukihiro Matsumoto"
ZRANGE hackers 2 4 => 1) "Claude Shannon", 2) "Alan Kay", 3) "Richard Stallman"
###########

### HASH ###
HSET user:1000 name "John Smith"
HSET user:1000 email "john.smith@example.com"
HSET user:1000 password "s3cret"

To get back the saved data use HGETALL:
HGETALL user:1000

You can also set multiple fields at once:
HMSET user:1001 name "Mary Jones" password "hidden" email "mjones@example.com"

If you only need a single field value that is possible as well:
HGET user:1001 name => "Mary Jones"

Numerical values in hash fields are handled exactly the same as in simple strings and there are operations to increment this value in an atomic way.
HSET user:1000 visits 10
HINCRBY user:1000 visits 1 => 11
HINCRBY user:1000 visits 10 => 21
HDEL user:1000 visits
HINCRBY user:1000 visits 1 => 1

###########

